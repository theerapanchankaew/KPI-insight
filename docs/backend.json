{
  "entities": {
    "Kpi": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Kpi",
      "type": "object",
      "description": "Represents a Key Performance Indicator.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the KPI."
        },
        "name": {
          "type": "string",
          "description": "Name of the KPI."
        },
        "category": {
          "type": "string",
          "description": "Category of the KPI (e.g., financial, operational, ESG, customer)."
        },
        "departmentId": {
          "type": "string",
          "description": "Reference to Department. (Relationship: Department 1:N Kpi)"
        },
        "level": {
          "type": "string",
          "description": "Level of the KPI (corporate, department, individual)."
        },
        "priority": {
          "type": "string",
          "description": "Priority of the KPI (high, normal, low)."
        },
        "targetValue": {
          "type": "number",
          "description": "Target value for the KPI."
        },
        "actualValue": {
          "type": "number",
          "description": "Actual value achieved for the KPI."
        },
        "unit": {
          "type": "string",
          "description": "Unit of measurement for the KPI (e.g., THB, %, Count)."
        },
        "period": {
          "type": "string",
          "description": "Time period for the KPI (monthly, quarterly, yearly)."
        },
        "ownerId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Kpi)"
        },
        "submissionId": {
          "type": "string",
          "description": "Reference to Submission. (Relationship: Submission 1:N Kpi)"
        }
      },
      "required": [
        "id",
        "name",
        "category",
        "departmentId",
        "level",
        "priority",
        "targetValue",
        "actualValue",
        "unit",
        "period",
        "ownerId",
        "submissionId"
      ]
    },
    "Department": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Department",
      "type": "object",
      "description": "Represents a department within the organization.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the department."
        },
        "name": {
          "type": "string",
          "description": "Name of the department (e.g., Sales, Operations, Corporate Affairs)."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "name": {
          "type": "string",
          "description": "Name of the user."
        },
        "departmentId": {
          "type": "string",
          "description": "Reference to Department. (Relationship: Department 1:N User)"
        },
        "title": {
          "type": "string",
          "description": "Job title of the user (e.g. CEO, Manager)."
        }
      },
      "required": [
        "id",
        "name",
        "departmentId",
        "title"
      ]
    },
    "Submission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Submission",
      "type": "object",
      "description": "Represents a KPI data submission.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the submission."
        },
        "submittedBy": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Submission)"
        },
        "submissionDate": {
          "type": "string",
          "description": "Date and time of the submission.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the submission (e.g., pending, approved, rejected, draft)."
        },
        "notes": {
          "type": "string",
          "description": "Additional notes or comments about the submission."
        }
      },
      "required": [
        "id",
        "submittedBy",
        "submissionDate",
        "status"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Only the user can read/write their own profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/departments/{departmentId}",
        "definition": {
          "entityName": "Department",
          "schema": {
            "$ref": "#/backend/entities/Department"
          },
          "description": "Stores department information.",
          "params": [
            {
              "name": "departmentId",
              "description": "The unique identifier of the department."
            }
          ]
        }
      },
      {
        "path": "/kpis/{kpiId}",
        "definition": {
          "entityName": "Kpi",
          "schema": {
            "$ref": "#/backend/entities/Kpi"
          },
          "description": "Stores KPI data. Includes denormalized 'ownerId' for authorization independence.",
          "params": [
            {
              "name": "kpiId",
              "description": "The unique identifier for the KPI."
            }
          ]
        }
      },
      {
        "path": "/submissions/{submissionId}",
        "definition": {
          "entityName": "Submission",
          "schema": {
            "$ref": "#/backend/entities/Submission"
          },
          "description": "Stores KPI submission data.",
          "params": [
            {
              "name": "submissionId",
              "description": "The unique identifier for the submission."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the KPI Insights application, emphasizing authorization independence, clear access modeling, and structural segregation to ensure security and scalability. Hereâ€™s a breakdown of the approach:\n\n*   **Authorization Independence**: This is achieved by adhering to the principle of denormalization. Specifically, the `ownerId` is present in the `kpis` collection, removing the need for rules to depend on `get()` calls to parent documents. This allows atomic operations and simplifies security rules.\n*   **Structural Segregation**: Data with different security requirements are stored in separate collections. User data is stored under `/users/{userId}`, ensuring that only the user can access their own data. KPIs are stored under `/kpis/{kpiId}` but contain the `ownerId` for authorization.\n*   **Access Modeling**: The structure uses path-based ownership for private user data (`/users/{userId}`). For KPI data, it relies on denormalized `ownerId` within the KPI document to link ownership back to the user.\n*   **QAPs (Rules are not Filters)**: Secure list operations are enabled by the segregation of data based on access level and the denormalization of authorization data, such as the `ownerId` on the `kpis` collection, which simplifies queries based on ownership and eliminates the need to filter based on data content in rules.\n\nThis structure ensures that security rules are straightforward, efficient, and maintainable, avoiding complex hierarchical dependencies and enabling atomic operations."
  }
}