/**
 * @file Firestore Security Rules
 * @core-philosophy This ruleset enforces a role-based access control model.
 *  Authenticated users can read most data, but write access is restricted to specific roles (e.g., Admin) or the owner of the data.
 * @data-structure
 *  - /users/{userId}: User profile information.
 *  - /employees/{employeeId}: Employee data.
 *  - /departments/{departmentId}: Department information.
 *  - /kpi_categories/{kpiCategoryId}: KPI categories.
 *  - /kpi_catalog/{kpiId}: KPI definitions.
 *  - /cascaded_kpis/{cascadedKpiId}: KPIs cascaded to departments.
 *  - /individual_kpis/{individualKpiId}: KPIs assigned to individuals.
 *  - /kpi_submissions/{kpiSubmissionId}: KPI submission data.
 *  - /kpi_approvals/{kpiApprovalId}: KPI approval records.
 *  - /reports/{reportId}: Performance reports.
 *  - /settings/global: Global application settings.
 *  - /monthly_kpis/{monthlyKpiId}: Monthly KPI data.
 * @key-security-decisions
 *  - User listing is denied to prevent unauthorized access to user data.
 *  - Read access is generally open to authenticated users unless explicitly restricted.
 *  - Write access requires authentication and often a specific role (Admin) or ownership.
 * @denormalization-for-authorization N/A
 * @structural-segregation N/A
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (get) Authenticated user can read their own profile. (auth.uid == userId)
     * @allow (list) Only admins can list all user profiles
     * @allow (create) User can create their own profile, only if the userId matches the authenticated user's ID.
     * @allow (update) User can update their own profile.
     * @allow (delete) User can delete their own profile.
     * @deny (get) Authenticated user cannot read another user's profile (auth.uid != userId)
     * @deny (create) User cannot create a profile with a mismatched userId.
     * @deny (update) User cannot update another user's profile.
     * @deny (delete) User cannot delete another user's profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn() && isAdmin();
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == request.auth.uid;
      allow update: if isSignedIn() && isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to employee data.
     * @path /employees/{employeeId}
     * @allow (get) Any authenticated user can read employee data.
     * @allow (list) Any authenticated user can list employee data.
     * @allow (create) Only admins can create employee data.
     * @allow (update) Only admins can update employee data.
     * @allow (delete) Only admins can delete employee data.
     * @deny (create) Non-admins cannot create employee data.
     * @deny (update) Non-admins cannot update employee data.
     * @deny (delete) Non-admins cannot delete employee data.
     * @principle Restricts write access to admins for employee data.
     */
    match /employees/{employeeId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    /**
     * @description Controls access to department data.
     * @path /departments/{departmentId}
     * @allow (get) Any authenticated user can read department data.
     * @allow (list) Any authenticated user can list department data.
     * @allow (create) Only admins can create department data.
     * @allow (update) Only admins can update department data.
     * @allow (delete) Only admins can delete department data.
     * @deny (create) Non-admins cannot create department data.
     * @deny (update) Non-admins cannot update department data.
     * @deny (delete) Non-admins cannot delete department data.
     * @principle Restricts write access to admins for department data.
     */
    match /departments/{departmentId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    /**
     * @description Controls access to KPI category data.
     * @path /kpi_categories/{kpiCategoryId}
     * @allow (get) Any authenticated user can read KPI category data.
     * @allow (list) Any authenticated user can list KPI category data.
     * @allow (create) Only admins can create KPI category data.
     * @allow (update) Only admins can update KPI category data.
     * @allow (delete) Only admins can delete KPI category data.
     * @deny (create) Non-admins cannot create KPI category data.
     * @deny (update) Non-admins cannot update KPI category data.
     * @deny (delete) Non-admins cannot delete KPI category data.
     * @principle Restricts write access to admins for KPI category data.
     */
    match /kpi_categories/{kpiCategoryId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    /**
     * @description Controls access to KPI catalog data.
     * @path /kpi_catalog/{kpiId}
     * @allow (get) Any authenticated user can read KPI data.
     * @allow (list) Any authenticated user can list KPI data.
     * @allow (create) Only admins can create KPI data.
     * @allow (update) Only admins can update KPI data.
     * @allow (delete) Only admins can delete KPI data.
     * @deny (create) Non-admins cannot create KPI data.
     * @deny (update) Non-admins cannot update KPI data.
     * @deny (delete) Non-admins cannot delete KPI data.
     * @principle Restricts write access to admins for KPI catalog data.
     */
    match /kpi_catalog/{kpiId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    /**
     * @description Controls access to cascaded KPI data.
     * @path /cascaded_kpis/{cascadedKpiId}
     * @allow (get) Any authenticated user can read cascaded KPI data.
     * @allow (list) Any authenticated user can list cascaded KPI data.
     * @allow (create) Only admins or managers can create cascaded KPI data.
     * @allow (update) Only admins or managers can update cascaded KPI data.
     * @allow (delete) Only admins or managers can delete cascaded KPI data.
     * @deny (create) Non-admins/managers cannot create cascaded KPI data.
     * @deny (update) Non-admins/managers cannot update cascaded KPI data.
     * @deny (delete) Non-admins/managers cannot delete cascaded KPI data.
     * @principle Restricts write access to admins and managers for cascaded KPI data.
     */
    match /cascaded_kpis/{cascadedKpiId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && (isAdmin() || isManager());
      allow update: if isSignedIn() && (isAdmin() || isManager()) && resource != null;
      allow delete: if isSignedIn() && (isAdmin() || isManager()) && resource != null;
    }

    /**
     * @description Controls access to individual KPI data.
     * @path /individual_kpis/{individualKpiId}
     * @allow (get) Any authenticated user can read individual KPI data.
     * @allow (list) Any authenticated user can list individual KPI data.
     * @allow (create) Only admins or managers can create individual KPI data.
     * @allow (update) Only admins or managers can update individual KPI data.
     * @allow (delete) Only admins or managers can delete individual KPI data.
     * @deny (create) Non-admins/managers cannot create individual KPI data.
     * @deny (update) Non-admins/managers cannot update individual KPI data.
     * @deny (delete) Non-admins/managers cannot delete individual KPI data.
     * @principle Restricts write access to admins and managers for individual KPI data.
     */
    match /individual_kpis/{individualKpiId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && (isAdmin() || isManager());
      allow update: if isSignedIn() && (isAdmin() || isManager()) && resource != null;
      allow delete: if isSignedIn() && (isAdmin() || isManager()) && resource != null;
    }

    /**
     * @description Controls access to KPI submission data.
     * @path /kpi_submissions/{kpiSubmissionId}
     * @allow (get) Any authenticated user can read KPI submission data.
     * @allow (list) Any authenticated user can list KPI submission data.
     * @allow (create) Any authenticated user can create KPI submission data.
     * @allow (update) Any authenticated user can update KPI submission data.
     * @allow (delete) Any authenticated user can delete KPI submission data.
     * @principle Allows any authenticated user to create, update, and delete KPI submission data.
     */
    match /kpi_submissions/{kpiSubmissionId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to KPI approval data.
     * @path /kpi_approvals/{kpiApprovalId}
     * @allow (get) Any authenticated user can read KPI approval data.
     * @allow (list) Any authenticated user can list KPI approval data.
     * @allow (create) Any authenticated user can create KPI approval data.
     * @allow (update) Any authenticated user can update KPI approval data.
     * @allow (delete) Any authenticated user can delete KPI approval data.
     * @principle Allows any authenticated user to create, update, and delete KPI approval data.
     */
    match /kpi_approvals/{kpiApprovalId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to report data.
     * @path /reports/{reportId}
     * @allow (get) Any authenticated user can read report data.
     * @allow (list) Any authenticated user can list report data.
     * @allow (create) Any authenticated user can create report data.
     * @allow (update) Any authenticated user can update report data.
     * @allow (delete) Any authenticated user can delete report data.
     * @principle Allows any authenticated user to create, update, and delete report data.
     */
    match /reports/{reportId} {
      allow get, list, create, update, delete: if isSignedIn();
    }

    /**
     * @description Controls access to global settings data.
     * @path /settings/global
     * @allow (get) Any authenticated user can read global settings data.
     * @allow (list) N/A - Singleton document, so no listing
     * @allow (create) Only admins can create global settings data.
     * @allow (update) Only admins can update global settings data.
     * @allow (delete) Only admins can delete global settings data.
     * @deny (create) Non-admins cannot create global settings data.
     * @deny (update) Non-admins cannot update global settings data.
     * @deny (delete) Non-admins cannot delete global settings data.
     * @principle Restricts write access to admins for global settings.
     */
    match /settings/global {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    /**
     * @description Controls access to monthly KPI data.
     * @path /monthly_kpis/{monthlyKpiId}
     * @allow (get) Any authenticated user can read monthly KPI data.
     * @allow (list) Any authenticated user can list monthly KPI data.
     * @allow (create) Only admins can create monthly KPI data.
     * @allow (update) Only admins can update monthly KPI data.
     * @allow (delete) Only admins can delete monthly KPI data.
     * @deny (create) Non-admins cannot create monthly KPI data.
     * @deny (update) Non-admins cannot update monthly KPI data.
     * @deny (delete) Non-admins cannot delete monthly KPI data.
     * @principle Restricts write access to admins for monthly KPI data.
     */
    match /monthly_kpis/{monthlyKpiId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && isAdmin() && resource != null;
      allow delete: if isSignedIn() && isAdmin() && resource != null;
    }

    // ---- Helper functions ----

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'Admin';
    }

    function isManager() {
      return isSignedIn() && (request.auth.token.role == 'Manager' || request.auth.token.role == 'VP' || request.auth.token.role == 'AVP');
    }
  }
}